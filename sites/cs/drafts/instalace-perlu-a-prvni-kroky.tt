=title Instalace Perlu  a první kroky
=timestamp 2012-08-08T10:45:56
=indexes strict, warnings, say, print, chomp, scalar, $
=tags screencast
=status show
=original installing-perl-and-getting-started
=books beginner_book
=author szabgab
=translator rampa
=archive 1
=comments 1
=social 1

=abstract start

Toto je první část <a href="/perl-tutorial">Perl tutoriálu</a>.

V této části se naučíte instalovat Perl v Microsoft Windows and používat jej ve Windows, Linuxu nebo Macu.

Najdete zde návod jak nastavit své vývojové prostředí, nebo řečeno méně vzletnými slovy: který editor nebo IDE používat pro psaní Perlu?

Ukážeme si také standardní příklad "Hello World".

=abstract end

<h2>Windows</h2>

Pro Windows použijeme <a href="http://dwimperl.com/">DWIM Perl</a>. Je to balík, který obsahuje Perl kompilátor/interpret, <a href="http://padre.perlide.org/">Padre, the Perl IDE</a>
a množství modulů z CPANu.

Začněte návštěvou stránky<a href="http://dwimperl.com/">DWIM Perl</a>
a stáhněte <b>DWIM Perl for Windows</b>.

Stažený exe soubor nainstalujte. Před tím než to uděláte se prosím ujistěte, že nemáte nainstalovaný jiný Perl.

Mohly by pracovat vedle sebe, to by ale vyžadovaly hlubší vysvětlení.
Prozatím mějme v systému nainstalovanou jediinou verzi Perlu.

<h2>Linux</h2>

Většina moderních distribucí Linuxu už obsahuje novější verzi Perlu.
Prozatím se s ní spokojíme. Jako editor můžete nainstalovat Padre - pro většinu distribucí Linuxu jsou k dispozici ofociální balíčky. Nebo můžete použít libovolný textový editor.
Pokud znáte vim nebo Emacs, můžete jej použít. Jinak by mohl být dobrým jednoduchým editorem Gedit.

<h2>Apple</h2>

Domnívám se, že pro Macy také existuje Perl, který můžete nainstalovat standardní cestou.

<h2>Editor a IDE</h2>

I když doporučuji používat Padre ID pro psaní Perlu, není to nezbytné.
V další části uvedu několik <a href="/perl-editor">editorů a IDE</a> které můžete pro programování v Perlu použít. I v případě, že budete používat jiný editor, uivatelům Windows doporučuji nainstalovat zmíněný DWIM Perl.

Obsahuje mnoho rozšiřujících balíčků, takže vám ušetří v budoucnu hodně času.

<h2>Video</h2>

Pokud dáváte přednost videu, můžete se podívat na moje 
<a href="http://www.youtube.com/watch?v=c3qzmJsR2H0">Hello world with Perl</a>. V tom případě by vás mohlo zajímat také <a href="/beginner-perl-maven-video-course">Beginner Perl Maven video course</a>.

<h2>První program</h2>

Váš první program bude vypadat takto:

<code lang="perl">
use 5.010;
use strict;
use warnings;

say "Hello World";
</code>

Vysvětleme si ho krok za krokem.

<h2>Hello world</h2>

Když nainstalujete DWIM Perl, kliknutím na "Start -> All programs -> DWIM Perl -> Padre" spustíte editor s prázdným souborem.

Napište

<code lang="perl">
print "Hello World\n";
</code>

Všimněte si, že se příkazy v perlu ukončují středníkem <hl>;</hl>.
<hl>\n</hl> představuje novou řádku.
Řetězce se uzavírají do uvozovek <hl>"</hl>.
Funkce <hl>print</hl> píše na obrazovku.
Když se program spustí, vypíše na obrazovku text a na konec přidá novou řádku.

Uložte soubor jako hello.pl a spusťte jej pomocí "Run -> Run Script".
Otevře se zvláštní okno s výstupem programu.

To je vše, právě jste napsali svůj první perl skript.

Pojďme jej trochu rozšířit.

<h2>Perl na příkazové řádce pro ne-Padre uživatele.</h2>

Pokud nepoužíváte Padre nebo žádné z dalších <a href="/perl-editor">IDE</a>, nebudete moci spustit váš skript přímo z editoru.
Tedy ne bez dalšího nastavení. Budte muset otevřít shell
(nebo cmd ve Windows), přepnout se do adresáře, kam jste umístili soubor hello.pl a napsat:

<hl>perl hello.pl</hl>

Takto můžete spouštět váš skript s příkazové řádky.

<h2>say() namísto print()</h2>

Pojďme náš jednořádkový Perl skript trochu rozšířit:

Ze všeho nejdřív určeme, jakou minimální verzi Perlu bychom rádi použili:

<code lang="perl">
use 5.010;
print "Hello World\n";
</code>

Teď můžete skript znovu spustit pomocí menu "Run -> Run Script" nebo pomocí klávesové zkratky <b>F5</b>.
Soubor se tím automaticky uloží.

Obecně je dobrým zvykem určovat, jakou minimální verzi perlu váš kód vyžaduje.

V našem případě díky tomu také získáme několik nových vlastností včetně klíčového slova <hl>say</hl>.
<hl>say</hl> je jako <hl>print</hl>, jen je kratší a automaticky přidává na konec nový řádek.

Můžete váš kód změnit takto:

<code lang="perl">
use 5.010;
say "Hello World";
</code>

Zaměnili jsme <hl>print</hl> za <hl>say</hl> a odstranili <hl>\n</hl> na konci řetězce.

Instalace, kterou používáte je pravděpodobně verze 5.12.3 nebo 5.14.
Většina moderních distribucí Linuxu obsahuje verzi 5.10 nebo novější.

Starší verze perlu se ale naneštěstí stále používají.
Nebudete s nimi moci použít klíčové slovo <hl>say()</hl> a další pčíklady možná budou vyžadovat nějaké úpravy. Když budu používat vlastnosti vyžadující verzi 5.10, upozorním na ně.

<h2>Záchranná síť</h2>

Navíc bych v každém skriptu důrazně doporučil pár dalších úprav chování Perlu. Proto přidáme 2 takzvaná pragmata, která jsou velmi podobná přepínačům kompilátoru v jiných jazycích.

<code lang="perl">
use 5.010;
use strict;
use warnings;

say "Hello World";
</code>

Klíčové slovo <hl>use</hl> říká perlu aby nahrál a aktivoval jednotlivá pragmata.

<hl>strict</hl> a <hl>warnings</hl> vám pomohou odhalit některé běžné chyby v kódu, nebo dokonce zabrání jejich vzniku.
Jsou velmi užitečné.

<h2>Vstup dat</h2>

V dalším kroku se dotážem uživatelky na jméno a zobrazíme jej v odpovědi.

<code lang="perl">
use 5.010;
use strict;
use warnings;

say "Jak se jmenuješ? ";
my $jmeno = <STDIN>;
say "Ahoj $jmeno, jak se máš?";
</code>

<hl>$jmeno</hl> je tzv. skalární proměnná.

Proměnné se deklarují pomocí klíčového slova <b>my</b>.
(Ve skutečnosti je to jeden požadavků, které přidává <hl>strict</hl>.)

Skalární proměnné vždy začínají znakem <hl>$</hl>.
&lt;STDIN&gt; je nástroj pro čtení řádky textu z klávesnice.

Zapište kód do souboru a spusťte jej pomocí F5.

Skript se dotáže na vaše jméno. Napište své jméno a stiskněte ENTER. Tím dáte perlu najevo, že jste se zápisem jména hotovi.

Všimněte si, že výpis je trochu rozbitý: čárka za jménem se objeví na nové řádce. Důvodem je ENTER, který jste stiskli po zadání jména. Ten se zapíše do proměnné <hl>$name</hl> společně se jménem.

<h2>Jak se zbavit konce řádky</h2>

<code lang="perl">
use 5.010;
use strict;
use warnings;

say "Jak se jmenuješ? ";
my $jmeno = <STDIN>;
chomp $jmeno;
say "Ahoj $jmeno, jak se máš?";
</code>

Odstranění konce řádky je v Perlu tak běžný krok, že pro něj existuje speciální funkce <hl>chomp</hl>. Ta z řetězce konec řádky odstraní.


<h2>Shrnutí</h2>

V každém skriptu, který napíšete byste měli <b>vždy</b> jako první dva příkazy použít <hl>use strict;</hl> a <hl>use warnings;</hl>.
 Velmi se také doporučuje přidat <hl>use 5.010;</hl>.

<h2>Cvičení</h2>

Slíbil jsem cvičení.

Vyzkoušejte následující skript:

<code lang="perl">
use strict;
use warnings;
use 5.010;

say "Hello ";
say "World";
</code>

Slova se nevypsala na jeden řádek.. Proč? Jak to opravit?

<h2>Cvičení 2</h2>

Napište skript, který se uživatele dotáže na dvě čísla, jedno po druhém.
Pak vypíše součet zadaných čísel.

<h2>Co dál?</h2>

Další část tutoriálu je o
<a href="/perl-editor">editorech, IDE a vývojovém prostředí pro Perl</a>.

