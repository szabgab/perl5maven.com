=title Bucla for în Perl
=timestamp 2013-06-02T20:27:00
=indexes for, foreach, buclă, buclă infinită
=status show
=books beginner_book
=author szabgab
=transator gvl
=index 1
=archive 1
=feed 1
=comments 1
=social 1

=abstract start

În partea aceasta a <a href="/perl-arrays/perl-tutorial">Tutorialului Perl</a>
vom vorbi despre <b>bucla for în Perl</b>. Unii oameni o mai numesc <b>bucla for în stil C</b>,
dar această construcţie e de fapt disponibilă în mai multe limbaje.

=abstract end

<h2>for in Perl</h2>

Cuvântul cheie The <b>for</b> în Perl poate funcţiona în două moduri diferite.
Poate funcţiona aşa cum lucrează şi o buclă <b>foreach</b> şi poate să se comporte
ca şi o buclă for din 3 părţi în stil C. E numită în stil C cu toate că e disponibilă în multe
limbaje.

Voi descrie cum funcţionează aceasta deşi prefer să scriu bucla în stil <hl>foreach</hl>,
aşa cum este descrisă în secţiunea despre  
<a href="http://perlmaven.com/perl-arrays">vectori Perl</a>.


Cele două cuvinte cheie <hl>for</hl> şi <hl>foreach</hl> pot fi folosite ca şi sinonime.
Perl va descifra singur la care dintre semnificaţii vă gândeaţi.

Bucla <b>for în stil C</b> are trei părţi în secţiunea de comandă. În general arată ca şi
codul acesta, deşi puteţi omite oricare dintre cele 4 părţi.

<code lang="perl">
for (INITIALIZE; TEST; STEP) {
  BODY;
}
</code>

Vezi acest cod drept exemplu:

<code lang="perl">
for (my $i=0; $i <= 9; $i++) {
   print "$i\n";
}
</code>

Partea INITIALIZE va fi executată odată ce execuţia ajunge în acel punct.

Apoi, imediat după aceea partea TEST va fi executată. Dacă aceasta este falsă, atunci se sare peste
toată bucla. Dacă partea TEST este adevărată atunci este executată partea BODY, urmată de partea
STEP.

(Pentru semnificaţia reală a valorilor ADEVĂRAT sau FALS, vezi
<a href="http://perlmaven.com/perl-arrays/boolean-values-in-perl">valori logice în Perl</a>.)

Apoi urmează din nou TEST şi tot aşa, atâta timp cât TEST se execută cu o valoare adevărată. 
Deci arată aşa:

<code>
INITIALIZE

TEST
BODY
STEP

TEST
BODY
STEP

...

TEST
</code>


<h2>foreach</h2>

Bucla de mai sus merge de la 0 la 9 şi poate fi scrisă ca o <b>buclă foreach<-b>
şi cred că intenţia e mult mai clară::

<code lang="perl">
foreach my $i (0..9) {
  print "$i\n";
}
</code>

Aşa cum le-am scris, cele două sunt de fapt echivalente aşa că unii oameni folosesc
cuvântul cheie <hl>for</hl> dar scriu o buclă <b>în stil foreach</b> ca şi aceasta:

<code lang="perl">
for my $i (0..9) {
  print "$i\n";
}
</code>

<h2>Părţile buclei for în Perl</h2>

INITIALIZE iniţializează desigur o varibilă. Este executat exact odată.

TEST este o expresie logică  oarecare şi testează dacă bucla for trebuie să se oprească sau
să continue. Este executată cel puţin odată. Odată ce BODY sau STEP sunt executate, TEST
mai este executată încă odată. Probabil că toate aceste studii de caz pot fi rescrise într-un mod
mai atrăgător.

STEP este o altă instrucţiune folosită în mod normal pentru a incrementa sau decrementa un fel
de index. Aceasta poate fi lăsată necompletată dacă, de exemplu, facem acest lucru în interiorul
BODY.

<h2>Infinite loop</h2>

Puteţi compune un ciclu infinit folosind <b>bucla for</a>:

<code lang="perl">
for (;;) {
  # fă ceva
}
</code>

Lumea îl scrie de obicei folosind o instrucţiune <hl>while</hl> cum ar fi:

<code lang="perl">
while (1) {
  # fă ceva
}
</code>

Este descrisă în partea despre <a href="http://perlmaven.com/perl-arrays/while-loop">bucla while
în Perl</a>.

<h2>perldoc</h2>

Puteţi găsi descrierea oficială a buclei for în secţiunea <b>perlsyn</b> a
<a href="http://perldoc.perl.org/perlsyn.html#For-Loops">documentaţiei Perl</a>.




