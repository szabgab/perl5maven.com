=title מיון מערכים בפרל
=timestamp 2013-08-28T22:00:00
=indexes sort, $a, $b, cmp, <=>
=status show
=original sorting-arrays-in-perl
=books beginner_book
=author szabgab
=translator bruck
=archive 1
=comments 1
=social 1

=abstract start

במאמר זה נראה כיצד ניתן <b>למיין מערך של מספרים או של מחרוזות בפרל</b>.

לפרל יש פונקציה מובנית שנקראת  <hl>sort</hl> ואין זה מפתיע שהיא יודעת למיין מערך. בצורתה הפשוטה ביותר - נותנים לה מערך והיא מחזירה את האלמנטים במערך כשהם  ממוינים. <hl>@sorted = sort @original</hl>.

=abstract end

<h2>מיון המבוסס על סדר ASCII</h2>

<code lang="perl">
#!/usr/bin/perl
use strict;
use warnings;
use 5.010;

use Data::Dumper qw(Dumper);

my @words = qw(foo bar zorg moo);

say Dumper \@words;

my @sorted_words = sort @words;

say Dumper \@sorted_words;
</code>


הדוגמה לעיל תדפיס את הפלט הבא:

והתוצאה היא:

<code lang="perl">
$VAR1 = [
        'foo',
        'bar',
        'zorg',
        'moo'
      ];

$VAR1 = [
        'bar',
        'foo',
        'moo',
        'zorg'
      ];
</code>

הפלט הראשון מציג את המערך לפני המיון, הפלט השני מציג את המערך אחרי המיון.


זו הדוגמה הפשוטה ביותר, אבל זה לא תמיד מה שאנחנו רוצים.
למשל מה קורה אם חלק מהמלים מתחילות באותיות גדולות?


<code lang="perl">
my @words = qw(foo bar Zorg moo);
</code>

התוצאה ב-<hl>@sorted_words</hl> תהיה:

והתוצאה היא:

<code lang="perl">
$VAR1 = [
        'Zorg',
        'bar',
        'foo',
        'moo'
      ];
</code>

כפי שאתם רואים, המילה שמתחילה באות גדולה הופיעה ראשונה.
הסיבה לכך היא שכברירת מחדל <hl>sort</hl>, ממיינת על פי הסדר בטבלת  ASCII ,
וכל האותיות הגדולות נמצאות לפני כל האותיות הקטנות.

<h2>פונקציות השוואה</h2>

פונקצצית <hl>sort</hl> עובדת בפרל באופן הבא: היא עוברת על כל זוג אלמנטים של המערך המקורי; בכל מעבר היא מציבה את הערך מהצד השמאלי במשתנה<hl>$a</hl>,
ואת הערך מהצד הימני במשתנה <hl>$b</hl>. אז היא קוראת ל<b>פונקציית השוואה</b>.
"פונקציית ההשוואה" תחזיר 1 אם התוכן של <hl>$a</hl> צריך להיות מצד שמאל,  1- אם התוכן של 
<hl>$b</hl> צריך להיות מצד שמאל, או 0 אם זה לה משנה כיוון ששני הערכים זהים.

כברירת מחדל לא רואים את פונקציית ההשוואה והפונקצייה <b>sort</b>משווה את הערכים לפי טבלת ה- ASCII ,
אבל אם אתם רוצים, אפשר לכתוב זאת במפורש:

<code lang="perl">
sort { $a cmp $b } @words;
</code>

התוצאה של קוד זה תהיה זהה לקוד שנכתב ללא הבלוק: <hl>sort @words</hl>.

ניתן לראות כאן שכברירת מחדל פרל משתמשת בפונקצייה <hl>cmp</hl> בפונקציית ההשוואה.
הסיבה לכך היא ש cmp עושה בדיוק את מה שאנחנו צריכים כאן. היא משווה את הערכים משני צידיה כמחרוזות, מחזירה 1 אם הערך השמאלי "קטן" מהערך הימני, היא מחזירה  1-  אם הערך השמאלי "גדול" מהימני, ומחזירה 0 אם הם שווים.

<h2>מיון לפי סדר אלפביתי</h2>

אם אתם רוצים להתעלם מההבחנה בין אותיות וגדולות - כלומר למיין על פי מה שלרוב נקרא סדר אלפביתי - אתם יכולים לעשות זאת באמצעות הקוד הבא:

<code lang="perl">
my @sorted_words = sort { lc($a) cmp lc($b) } @words;
</code>

במקרה זה, לצורך ההשוואה, אנחנו קוראים לפונקצייה <hl>lc</hl> שמחזירה את הגירסה של המחרוזת <b>באותיות קטנות</b> .
הפונקצייה <hl>cmp</hl> משווה את גירסאות האותיות הקטנות של המחרוזות ומחליטה איזו מהמחזורות המקוריות צריכה להיות קודם.

התוצאה היא

והתוצאה היא:

<code lang="perl">
$VAR1 = [
        'bar',
        'foo',
        'moo',
        'Zorg'
      ];
</code>

<h2>מיון מספרים בפרל</h2>

אם ניקח מערך מספרים ונמיין אותם עם ברירת המחדל של המיון, התוצאה כנראה לא תהיה מה שאנחנו מצפים.

<code lang="perl">
my @numbers = (14, 3, 12, 2, 23);
my @sorted_numbers = sort @numbers;
say Dumper \@sorted_numbers;
</code>


והתוצאה היא:

<code lang="perl">
$VAR1 = [
        12,
        14,
        2,
        23,
        3
      ];
</code>

כמובן שאם תחשבו על זה תיראו שזה לא ממש מפתיע. כשפונקציית המיון רואה 12 ו-3 היא משווה אותם כמחרוזות כלומר קודם כל היא משווה את התו הראשון בשתי המחרוזות. "1" ו- "3".
"1" קודם ל-"3" בטבלת ה- ASCII ולכן המחרוזת "12" תהיה לפני המחרוזת "3".

פרל לא מבינה לבד שאתם רוצים למיין את הערכים כמספרים.

אבל זאת לא בעיה, כיוון שאפשר לכתוב פונקציית השוואה שתשווה את שני הערכים כמספרים.
לצורך זה נשתמש באופרטור <lt><=></li>
(שנקרא גם <a href="http://en.wikipedia.org/wiki/Spaceship_operator">spaceship operator - אופרטור ספינת החלל</a>) 
שמשווה את שני הפרמטרים כמספרים ומחזיר 1 , 1- או 0.

<code lang="perl">
my @sorted_numbers = sort { $a <=> $b } @numbers;
</code>

Results in:

והתוצאה היא:

<code lang="perl">
$VAR1 = [
        2,
        3,
        12,
        14,
        23
      ];
</code>


