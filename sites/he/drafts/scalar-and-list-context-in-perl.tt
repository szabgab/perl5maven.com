=title הקשר סקלרי(Scalar) והקשר רשימתי (List) בפרל, גודל של מערך
=timestamp 2013-04-10T11:45:56
=indexes scalar, list, array, size, length, context, Perl
=status show
=books beginner_book
=original scalar-and-list-context-in-perl
=author szabgab
=translator bruck
=archive 1
=comments 1
=social 1

=abstract start

בחלק זה של  <a href="/perl-tutorial">המדריך לפרל</a> נסתכל על רגישות להקשר (context)</b> in Perl.

בעברית, כמו בשפות מדוברות אחרות, למילים יכולה להיות יותר ממשמעות אחת.
למשל למילה  "סיפר" יש יותר ממשמעות אחת

הוא סיפר אותי.

הוא סיפר לי משהו.

אנחנו מבינים מה המשמעות הנכונה לפי המשפטים שמסביב למילה.
זה נקרא הקשר.

גם בפרל 5 זה עובד כך. למלים, לקריאות לפונקציות ולביטויים אחרים יכולות להיות משמעויות שונות בתלות בהקשר. זה קצת מקשה על לימוד השפה, אך זה נותן לה יכולת הבעה רחבה יותר.

=abstract end

בפרל יש שני הקשרים עיקריים: הקשר סקלרי (SCALAR) והקשר רשימתי (LIST .

<h2>מערכים בהקשר רשימתי</h2>

נראה דוגמה:

<code lang="perl">
my @words = ('Foo', 'Bar', 'Baz');
my @names = @words;
</code>

אחרי ההצבה המערך <hl>@names</hl> מכיל עותק של האלמנטים שהיו במערך <hl>@words</hl>;

הצבה של מערך אחד למערך אחר מעתיקה את תוכנו של המערך

<h2>מערך בהקשר סקלרי</h2>

<code lang="perl">
my @words = ('Foo', 'Bar', 'Baz');
my $people =  @words;
</code>

הפעם הצבנו את המערך  <hl>@words</hl> במשתנה הסקלרי<hl>$people</hl, .

שפות שונות מטפלות במקרה הזה בצורה שונה, בפרל הצבה כזאת מציבה את  <b>מספר האלמנטיםם במערך</b>
במשתנה הסקלרי.

התנהגות זו היא בחירה די שרירותית, ובדוגמה שראינו לא ממש שימושית, אך יש מקרים שבהם התנהגות זו היא מאוד שימושית.

<h2>הקשר סקלרי והקשר רשימתי</h2>

ההקשרים שראינו נקראים הקשר סקלרי והקשר רשימתי. כלומר האם אנחנו מצפים לקבל ערך יחיד (בהקשר סקלרי) או מספר ערכים (בהקשר רשימתי).
בהקשר רשימתי הערכים עשויים להיות 0, 1, 2, או כל מספר אחר.

<h2>ההקשר של משפט התנאי if</h2>

הסתכלו בדוגמה הבאה:

<code lang="perl">
my @words = ('Foo', 'Bar', 'Baz');

if (@words) {
   say "There are some words in the array";
}
</code>

בחלק התנאי של משפט ה- <hl>if</hl>אנחנו מצפים לערך אחד בלבד. מכאן שההקשר חייב להיות הקשר סקלרי.

אנחנו כבר יודעים שערכו של מערך בהקשר סקלרי הוא מספר האלמנטים במער. כמו כן אנחנו יודעים שהמספר הזה הוא 0 (כלומר<a href="/arakhim-booleanim-be-perl">FALSE</a>)
כשהמערך ריק, ומספר חיובי כלשהו (כלומר <a href="/arakhim-booleanim-be-perl">TRUE</a>),
כשהמערך מכיל ערך אחד או יותר.

אז בגלל אותה החלטה שרירותית שראינו קודם, הקוד <hl>if (@words)</hl>
בודק אם יש למערך תוכן כלשהו ונכשל אם המערך ריק.

אם נהפוך את התנאי  <hl>if (! @words)</hl> יהיה  true
אם המערך ריק.

<h2>הקשר סקלרי והקשר רשימתי</h2>

 <a href="http://perlmaven.com/the-year-19100">בחלק הקודם</a> ראינו איך <hl>localtime()</hl>
מתנהג בהקשר סקלרי ובהקשר רשימתי, ועכשיו אנחנו רואים איך מערך מתנהג בהקשר סקלרי ובהקשר רשימתי.

אין כלל אחד לכל המקרים לגבי הקשר, ותצטרכו ללמוד את המקרים המסוימים, אך לרוב הם די ברורים. בכל מקרה, כשאתם קוראים את התיעוד של פונקציה באמצעות
<a href="http://perlmaven.com/core-perl-documentation-cpan-module-documentation">perldoc</a>,
תיראו הסבר מתאים לכל פונקציה.
לפחות במקרים שבהם הקשר סקלרי והקשר רשימתי מחזירים תוצאות שונות.

נסתכל עכשיו על מספר דוגמאות נוספות של ביטויים בפרל ואיזה הקשר הם יוצרים.

<h2>יצירת הקשר סקלרי</h2>

ראינו קודם שלא משנה מה מציבים במשתנה סקלרי, מה שמוצב בו יהיה בהקשר סקלרי.
נתאר זאת כך:

<code>
$x = SCALAR;
</code>

כיוון שאלמנטים בודדים של מערך הם גם סקלרים, הצבה באחד מהם יוצרת גם היא הקשר סקלרי.

<code>
$word[3] = SCALAR;
</code>

שירשור מצפה למחרוזות משני צידיו, לכן הוא יוצר הקשר סקלרי בשני הצדדים.

<code>
"string" . SCALAR;
</code>

אבל גם

<code>
SCALAR . "string"
</code>

ולכן

<code lang="perl">
my @words = ('Foo', 'Bar', 'Baz');
say "Number of elements: " . @words;
say "It is now " . localtime();
</code>

ידפיס

<code>
Number of elements: 3
It is now Thu Feb 30 14:15:53 1998
</code>

אופרטורים נומריים לרוב מצפים לשני מספרים - שני סקלרים - משני צידיהם.
מכאן שאופרטורים נומריים יוצרים הקשר סקלרי משני צידיהם:

<code>
5 + SCALAR;

SCALAR + 5;
</code>

<h2>יצירת הקשר רשימתי</h2>

קיימות צורות קוד שיוצרות הקשר רשימתי:

אחת מהן היא הצבה למערך:

<code>
@x = LIST;
</code>

עוד אחת היא הצבה לרשימה:

<code>
($x, $y) = LIST;
</code>

אפילו אם לרשימה יש רק אלמנט אחד:

<code>
($x) =  LIST;
</code>

זה מביא אותנו לנושא חשוב שעלול להכשיל אנשים בקלות:

<h2>מתי הסוגריים חשובים?</h2>

<code lang="perl">
use strict;
use warnings;
use 5.010;

my @words = ('Foo', 'Bar', 'Baz');

my ($x) = @words;
my $y   = @words;

say $x;
say $y;
</code>

הפלט הוא:

<code>
Foo
3
</code>

זהו אחד מאותם מקומות שבהם הסוגריים הם מאוד חשובים.

בהצבה הראשונה <hl>my ($x) = @words;</hl> הצבנו 
ל<b>רשימה</b> של משתנה(/משתנים) סקלריים.
כתוצאה מכך נוצר הקשר רשימתי בצד ימין. כלומר ה<b>הערכים</b>
של המערך הועתקו לרשימה בצד שמאל של ההצבה. כיוון שהיה רק סקלר אחד, האלמנט הראשון של המערך הועתק, והשאר לא הועתקו.

בהצבה השנייה <hl>my $y   = @words;</hl> הצבנו <b>ישירות</b> למשתנה סקלרי. התוצאה של ההצבה הייתה יצירת הקשר סקלרי בצד ימין של ההצבה. מערך בהקשר סקלרי מחזיר את מספר האלמנטים במערך.

הבחנה זו תהיה מאוד חשובה כשתסתכלו אן 
<a href="http://perlmaven.com/subroutines-and-functions-in-perl">העברת פרמטרים לפונקציות.</a>.

<h2>אילוץ הקשר סקלרי</h2>

גם  <hl>print()</hl> וגם <hl>say()</hl>יוצרים הקשר רשימתי לפרמטרים שלהם.
אז מה עושים אם רוצים להדפיס את מספר האלמנטים במערך?
מה עושים אם רוצים להדפיס את התאריך בפורמט היפה שמוחזר על ידי <hl>localtime()</hl>?

ננסה את הדבר הבא:

<code lang="perl">
use strict;
use warnings;
use 5.010;

my @words = ('Foo', 'Bar', 'Baz');

say @words;
say localtime();
</code>

והפלט הוא:

<code>
FooBarBaz
3542071011113100
</code>
את השורה הראשונה אפשר עוד לקרוא איכשהו, אילו הערכים מצופפים יחד.

השורה השנייה נראית מבלבלת. זה לא נראה אותו דבר כמו התוצאה שציפינו מהפונקציה <hl>time()</hl>
. למעשה אילו תשעה המספרים המוחזרים על ידי הפונקציה <hl>localtime()</hl>
בהקשר רשימתי. אם אתם לא זוכרים, עיינו שוב בפרק על 
<a href="/the-year-19100">שנת 19100</a>.

הפתרון הוא להשתמש בפונקציה <hl>scalar()</hl> היוצרת הקשר סקלרי לפרמטר שלה.
למעשה זה התפקיד היחיד של הפונקציה <hl>scalar()</hl> . אנשים רבים רואים בזה מעין
<b>(casting) המרה</b> מרבים ליחידץ נראה לי ש-casting היא מילה שאינה בשימוש נפוץ בעולם הפרל.

<code lang="perl">
say scalar @words;
say scalar localtime();
</code>

והפלט יהיה:

<code>
3
Mon Nov  7 21:02:41 2011
</code>

<h2>אורך או גודל של מערך בפרלl</h2>

בקיצור, אם אתם רוצים לקבל את גודלו של מערך בפרל, אתם יכולים להשתמש בפונקציה
 <hl>scalar()</hl> כדי לאלץ את המערך להקשר סקלרי ולהחזיר את גודל המערך.

<h2>השיטה המתחכמת</h2>

ייתכן שתיראו קוד שנראה כך:

<code lang="perl">
0 + @words;
</code>

זוהי בעצם שיטה מתחכמת, לקבל את גודלו של מערך. האופרטור <hl> + </hl> 
יוצר הקשר סקלרי בשני צידיו. בהקשר סקלרי המערך מחזיר את גודלו.
הוספת 0 למספר שהתקבל אינה משנה את המספר, לכן הביטוי מחזיר את גודלו של המערך.

אני ממליץ לכתוב את זה עם הפונקציה <hl>scalar</hl>, זה קצת יותר ארוך, אבל זה גם יותר ברור.


