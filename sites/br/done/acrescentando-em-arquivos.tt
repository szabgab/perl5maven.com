=title Acrescentando texto em arquivos (appending)
=timestamp 2013-03-15T07:30:01
=indexes files, append, acrescentar, open, >>
=status show
=original appending to files
=books beginner_book
=author szabgab
=translator leprevost
=index 1
=archive 1
=feed 1
=comments 1
=social 1

=abstract start

Neste capítulodo <a href="/perl-tutorial">tutorial Perl</a> nós iremos ver <b>como acrescentar informação em arquivos existentes utilizando Perl</b>.

No episódio anterior nós aprendemos <a href="/writing-to-files-with-perl">como escrever em arquivos</a>.
Isso é muito útil quando estamos criando um arquivo, mas há casos onde nós desejamos manter o arquivo original, 
e apenas adicionar novas linhas a ele.

O caso mais comum é quando estamos escrevendo um arquivo de histórico, ou <i>log</i>.

=abstract end

Ao escrever

<code lang="perl">
open(my $fh, '>', 'report.txt') or die ...
</code>

Abrimos um arquivo para ecrita utilizando o sinal <hl>></hl>, que irá automaticamente deletar o conteúdo do arquivo, caso haja algum.

Se nós desejamos <b>acrescentar</b> algo ao final do arquivo nós devemos utilizar o sinal <b> maior do que</b> <hl>>></hl>, como no exemplo abaixo:

<code lang="perl">
open(my $fh, '>>', 'report.txt') or die ...
</code>

Ao invocar essa função, iremos abrir o arquivo para acrescentar informações nele, isso significa que o arquivo irá permanecer intacto
e qualquer coisa que for impresso pelas funções <hl>print()</hl> e <hl>say()</hl> serão acrescentadas ao final.

Veja abaixo um exemplo completo:

<code lang="perl">
use strict;
use warnings;
use 5.010;

my $filename = 'report.txt';
open(my $fh, '>>', $arquivo) or die "Não foi possível abrir o arquivo '$arquivo' $!";
say $fh "Meu primeiro relatório escrito em perl";
close $fh;
say 'pronto';
</code>

Se você executar esse script várias vezes, você verá que o arquivo irá crescer.
Para cada vez que for executado, será acrescentado uma nova linha ao arquivo.
