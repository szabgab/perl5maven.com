=title Appending to files
=timestamp 2013-03-15T07:30:01
=indexes files, append, open, >>
=status show
=books beginner_book
=author szabgab
=index 1
=archive 1
=feed 1
=comments 1
=social 1

=abstract start

In this episode of the <a href="/perl-tutorial">Perl tutorial</a> we are going to see <b>how to append to files using Perl</b>.

In the previous episode we learned <a href="/writing-to-files-with-perl">how to write to files</a>.
That's good when we are creating a file from scratch, but there are cases when you would rather keep the original file,
and only add lines to the end.

The most prominent case is when you are writing a log file.

=abstract end

Calling

<code lang="perl">
open(my $fh, '>', 'report.txt') or die ...
</code>

Opening a file for writing using the <hl>></hl> sign will delete the content of the file if it had any.

If we would like to <b>append</b> to the end of the file we use <b>two greater-than</b> signs <hl>>></hl> as in this example:

<code lang="perl">
open(my $fh, '>>', 'report.txt') or die ...
</code>

Calling this function will open the file for appending. that means the file will remain intact
and anything your <hl>print()</hl> or <hl>say()</hl> to it will be added to the end.

The full example is this:

<code lang="perl">
use strict;
use warnings;
use 5.010;

my $filename = 'report.txt';
open(my $fh, '>>', $filename) or die "Could not open file '$filename' $!";
say $fh "My first report generated by perl";
close $fh;
say 'done';
</code>

If you run this script several times, you will see that the file is growing.
Every run of the script will add another row to the file.


