=title Anfügen von Dateien
=timestamp 2013-04-15T09:30:01
=indexes files, append, open, >>
=status show
=books beginner_book
=author szabgab
=index 1
=archive 1
=feed 1
=comments 1
=social 1

=abstract start

In dieser Ausgabe des <a href="/perl-tutorial">Perl-Tutorials</a> möchten wir zeigen, <b>wie man mit Perl Inhalte an Dateien anfügt</b>.

In der vorherigen Ausgabe haben wir gelernt, <a href="/writing-to-files-with-perl">wie Dateien geschrieben werden</a>. Dieses Vorgehen ist geeignet, um Dateien von Grund auf neu zu schreiben. Es kommt jedoch vor, dass wir die Original-Datei behalten, und nur neue Zeilen an das Ende der Datei anfügen möchten.

Der bekannteste Anwendungsfall hierfür ist das Schreiben von Protokoll-Dateien.

=abstract end

Aufruf

<code lang="perl">
open(my $fh, '>', 'report.txt') or die ...
</code>

Mit dem <hl>></hl>-Zeichen eine Datei zu öffnen hat die Folge, dass der Inhalt dieser Datei gelöscht wird, falls diese bereits existiert.

Wenn Du an eine bestehende Datei am Ende etwas <b>anfügen</b> möchtest, verwenden wir <b>zwei größer-als</b> Zeichen <hl>>></hl> wie in diesem Beispiel:

<code lang="perl">
open(my $fh, '>>', 'report.txt') or die ...
</code>

Diese Funktion öffnet die Datei zum Anfügen. Das hat die Folge, dass der ursprüngliche Inhalt nicht überschrieben wird, und alle <hl>print()</hl> oder <hl>say()</hl> Anweisungen an das Ende der Datei angefügt werden.

Hier ein vollständiges Beispiel:

<code lang="perl">
use strict;
use warnings;
use 5.010;

my $filename = 'report.txt';
open(my $fh, '>>', $filename) or die "Could not open file '$filename' $!";
say $fh "My first report generated by perl";
close $fh;
say 'done';
</code>

Wenn Du dieses Script mehrmals  ausführst wirst Du sehen, dass die Datei wächst. Bei jedem Aufruf wird eine neue Zeile an das Ende der Datei angefügt.

