=title Дописывание в файл
=timestamp 2013-07-10T12:00:00
=indexes files, append, open, >>
=status show
=original appending-to-files
=books beginner_book
=author szabgab
=translator spidamoo
=archive 1
=comments 1
=social 1

=abstract start

В этой части <a href="/perl-tutorial">Учебника Perl</a> мы узнаем, как <b>дописывать данные в файл
с помощью Perl</b>.

В предыдущей части мы научились <a href="/zapis-v-fayl-na-perl">записывать в файлы</a>.
Это удобно, когда мы создаем файл с нуля, но в некоторых случаях вам понадобится сохранять
исходный файл, дописывая новые строки в конец.

Наиболее очевидный случай - это запись в лог-файл.

=abstract end

Вызов

<code lang="perl">
open(my $fh, '>', 'отчет.txt') or die ...
</code>

Открыв файл для записи (со знаком <hl>></hl>), мы удалим все содержимое файла, которое могло в нем
быть.

Если мы хотим <b>дописать</b> данные в конец файла, нужно использовать <b>два знака "больше"</b>,
например:

<code lang="perl">
open(my $fh, '>>', 'отчет.txt') or die ...
</code>

Вызов этой функции откроет файл для дописывания. То есть прежнее содержимое файла
останется в сохранности, а все, что мы будем записывать в него с помощью <h1>print</h1> или 
<h1>say</h1>, добавится в конец.

Вот полный пример:

<code lang="perl">
use strict;
use warnings;
use 5.010;

my $filename = 'отчет.txt';
open(my $fh, '>>', $filename) or die "Не могу открыть файл '$filename' $!";
say $fh "Мой первый отчет, сгенерированный с помощью perl";
close $fh;
say 'готово';
</code>

Если запустить этот скрипт несколько раз, мы увидим, что файл растет.
Каждый запуск скрипта будет добавлять еще одну строку в файл.


