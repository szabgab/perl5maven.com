=title Name "main::x" used only once: possible typo at ...
=timestamp 2013-07-10T12:00:00
=indexes warnings, strict, possible typo
=status show
=original name-used-only-once-possible-typo
=books beginner_book
=author szabgab
=translator spidamoo
=archive 1
=comments 1
=social 1

=abstract start

Если вы увидели это предупреждение в Perl-скрипте, у вас большие неприятности.

=abstract end

<h2>Присваивание значения переменной</h2>

Присваивание значения переменной, но не использование ее, или использование переменной единожды,
вообще не присвоив ей значения, вряд ли будет корректным в любом коде.

Возможно, единственное разумное объяснение - вы допустили опечатку, что и привело к появлению 
переменной, используемой лишь однажды.

Вот пример кода, в котором мы <b>только присваиваем значение переменной</b>:

<code lang="perl">
use warnings;

$x = 42;
</code>

Выполнение его приведет к предупреждению:

<code>
Name "main::x" used only once: possible typo at ...
</code>

Эта часть с "main::" и отсутствие $ могут вас смутить. "main::" здесь потому, что по умолчанию
любая переменная в Perl относится к основному пространству имен main. Существует также пара вещей,
которые могут называться "main::x", и только у одной из них есть в начале $. Если это звучит
немного запутанно, не беспокойтесь. Это и есть запутанно, но можно надеяться, что вам не придется 
иметь дела с этим в течение долгого времени.

<h2>Только получение значения</h2>

Если получилось так, что вы <b>используете переменную лишь однажды</b>

<code lang="perl">
use warnings;

print $x;
</code>

то вы, скорее всего, получите два предупреждения:

<code>
Name "main::x" used only once: possible typo at ...
Use of uninitialized value $x in print at ...
</code>

Об одном из них сейчас и идет речь, а о другом вы можете прочесть в статье
<a href="/use-of-uninitialized-value">Use of uninitialized value</a>.


<h2>О какой опечатке речь?</h2>

Могли бы вы спросить.

Представьте, что кто-то использует переменную под названием <hl>$l1</hl>. Потом приходите вы и 
хотите использовать ту же переменную, но пишете <hl>$ll</hl>. В зависимости от используемого шрифта,
они могут выглядеть очень похоже друг на друга.

Или, возможно, существует переменная <hl>$color</hl>, но вам ближе британский язык, так что вы 
автоматически написали <hl>$colour</hl>, имея в виду эту переменную.

Или у вас была переменная <hl>$number_of_misstakes</hl>, и вы не заметили ошибки в исходном названии,
и написали <hl>$number_of_mistakes</hl>.

В общем, понятно.

Если вам повезет, вы ошибетесь только однажды, а если не повезет, и вы напишете название неправильно
дважды, то это предупреждение не появится. В конце концов, если вы используете одну переменную дважды,
на это, должно быть, есть причина.

Так как же избежать этого?

Для начала, постарайтесь избегать названий переменных с неоднозначным написанием, и будьте 
внимательны, набирая их.

Если же вы хотите действительно решить эту проблему, просто используйте <b>use strict</b>!

<h2>use strict</h2>

Как видно в предыдущих примерах, мы не использовали strict-режим. Если бы мы его включили, то вместо
предупреждения о возможной опечатке мы бы получили ошибку компиляции:
<a href="/global-symbol-requires-explicit-package-name">Global symbol requires explicit package name</a>.

Это происходило бы даже если вы использовали неверную переменную больше одного раза.

Конечно, кто-то мог бы просто, не подумав, поставить "my" перед неправильной переменной, но вы-то
не из таких, не так ли? Вы бы подумали над проблемой и нашли бы, как действительно должна 
называться переменная.

Наиболее типичный способ увидеть это предупреждение - не использовать strict.

И вот тогда-то у вас возникнут серьезные неприятности.

<h2>Другие случаи при использовании strict</h2>

Как указали GlitchMr и анонимный комментатор, существуют и некоторые другие случаи:

Этот код также может выдать такое:

<code lang="perl">
use strict;
use warnings;

$main::x = 23;
</code>

Вы увидите предупреждение: <b>Name "main::x" used only once: possible typo ...</b>

Здесь по крайней мере понятно, откуда взялось 'main', или в следующем примере, откуда взялось 
'Mister'. (подсказка. Это название модуля, которого не хватало другой 
<a href="/global-symbol-requires-explicit-package-name">ошибке про названия модулей</a>.) В
следующем примере название модуля - 'Mister'.

<code lang="perl">
use strict;
use warnings;

$Mister::x = 23;
</code>

Мы увидим предупреждение <b>Name "Mister::x" used only once: possible typo ...</b>.

Следущий пример тоже выдает это предупреждение. Дважды:

<code lang="perl">
use strict;
use warnings;

use List::Util qw/reduce/;
print reduce { $a * $b } 1..6;
</code>

<code>
Name "main::a" used only once: possible typo at ...
Name "main::b" used only once: possible typo at ...
</code>

Это происходит потому, что <hl>$a</hl> и <hl>$b</hl> - специальные переменные, используемые во
встроенной функции сортировки (<h1>sort</h1>), поэтому их не нужно объявлять; однако здесь они
используются только один раз.
(На самом деле мне непонятно, почему здесь эти предупреждения появляются, хотя в таком же коде с
использованием <b>sort</b> - нет, но <a href="http://www.perlmonks.org/?node_id=1021888">Perl Monks</a>
могут знать.)


