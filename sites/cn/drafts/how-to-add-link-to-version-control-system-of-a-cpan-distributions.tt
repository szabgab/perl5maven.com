=title 如何让Meta CPAN为模块显示一个到其版本控制系统的链接
=timestamp 2013-05-23T20:45:56
=indexes Perl, Perl 5, CPAN, Git, Github, SVN, Subversion, VCS, META, ExtUtils::MakeMaker, Module::Build, Module::Install, Dist::Zilla, CPAN::Meta::Spec
=status show
=original how-to-add-link-to-version-control-system-of-a-cpan-distributions
=author szabgab
=translator herolee
=index 1
=archive 1
=feed 1
=comments 1
=social 1

=abstract start

当你浏览<a href="https://www.metacpan.org/">META CPAN</a>或者<a href="http://search.cpan.org/">search.cpan.org</a>时，
你会发现有些模块有一个链接指向Github或者其他托管他们项目的地方。

在search.cpan.org上，它是一个在<b>Repository</b>标题旁的文字链接，而Meta CPAN根据存储的类型，它或是一个链接，或是一个<b>Clone repository</b>标题下边的弹出式菜单。
（Github用漂亮的弹出式菜单，私有存储则是简单的链接。）

=abstract end

两个站点都从CPAN发布的模块里所含的元文件获取到版本控制系統的链接。或者是 META.yml，或者是新式的 META.json。（他们只是格式有别。）


元文件通常在作者发布模块的時候自动生成，我这里只
這裡要告訴你如何讓四個主要的打包系統包含倉儲的連結。

這個範例中我使用 <a href="https://metacpan.org/module/Task::DWIM">Task::DWIM</a> 的倉儲連結
這是一個實驗性質的模組，列出了所有 <a href="http://dwimperl.com/">DWIM Perl</a> 所含的模組。

<h2>ExtUtils::MakeMaker</h2>

如果你使用 <a href="https://metacpan.org/module/ExtUtils::MakeMaker">ExtUtils::MakeMaker</a>
請把下面這段當做丟給 <b>WriteMakefile</b> 函式的參數加入你的 Makefile.PL

<code lang="perl">
META_MERGE        => {
     resources => {
         repository  =>  'https://github.com/dwimperl/Task-DWIM',
     },
},
</code>

如果你的 ExtUtils::MakeMaker 不支援，請升級它。

<h2>Module::Build</h2>

如果你使用 <a href="https://metacpan.org/module/Module::Build">Module::Build</a>，加入下面這段到 Build.PL，
作為 <b>Module::Build->new</b> 的參數：

<code lang="perl">
meta_merge => {
    resources => {
            repository => 'https://github.com/dwimperl/Task-DWIM'
    }
},
</code>

<h2>Module::Install</h2>

如果你使用 <a href="https://metacpan.org/module/Module::Install">Module::Install</a> 加入下面這段到 Makefile.PL：

<code lang="perl">
repository 'https://github.com/dwimperl/Task-DWIM';
</code>

<h2>Dist::Zilla</h2>

如果你使用 <a href="http://dzil.org/">Dist::Zilla</a>，
<a href="https://metacpan.org/module/Dist::Zilla::Plugin::Repository">Dist::Zilla::Plugin::Repository</a>
模組會自動幫你把連結放入倉儲，雖然你也可以手動指定。

<code lang="perl">
[MetaResources]
repository.url = https://github.com/dwimperl/Task-DWIM.git
</code>

詳細的版本會長得像是下面這樣。
這部份只會包含在 META.json，META.yml 則無。要產生此檔需要 Dist::Zilla 
的 <a href="https://metacpan.org/module/Dist::Zilla::Plugin::MetaJSON">MetaJSON plugin</a>

<code lang="perl">
[MetaResources]
repository.web = https://github.com/dwimperl/Task-DWIM
repository.url = https://github.com/dwimperl/Task-DWIM.git
repository.type = git

[MetaJSON]
</code>

Dist::Zilla.還有許多其他方式可以
<a href="http://www.lowlevelmanager.com/2012/05/dzil-plugins-github-vs-githubmeta.html">把倉儲連結加入元文件中</a>

<h2>為什麼我需要加入此連結</h2>

簡單。越容易發送補丁給你的模組，你越容易得到補丁。

還有，從最後一次發佈後，你也許已經對你的模組做了許多修改。
你也許已經修正許多他人想修正的臭蟲。如果我們可以瀏覽你的倉儲，會避免工作重複。

<h2>其他資源</h2>

如果你已經做到這些，你也可以加入其他資源。
這份 <a href="https://metacpan.org/module/CPAN::Meta::Spec#resources">CPAN 元規格</a> 列出了所有項目。
如果哪裡不清楚，問就對了。

<h2>許可證</h2>

在另一篇文章中，我說明了
<a href="/how-to-add-the-license-field-to-meta-files-on-cpan">如何把許可證資訊加入 CPAN 模組的元文件中</a>。
如果你有一個公開倉儲，這樣讓其他人比較容易發送補丁。